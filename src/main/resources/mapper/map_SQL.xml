<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ce.smell.mapper.MapMapper">

	<select id="getCMAQ9KM" resultType="com.ce.smell.model.MapVO">
		SELECT OGR_FID, 
		       INDEXID, 
		       NVL(FLAG, 0) AS FLAG 
		  FROM CMAQ_9KM_WGS84_2
	</select>

	<update id="putFlag" parameterType="java.util.HashMap">
		UPDATE ANALS_AREA_MANAGE SET GRID_INTRST_SE_CODE = #{flag} WHERE ANALS_AREA_ID = #{indexId}
	</update>
	
	<insert id="insertAnals" parameterType="java.util.HashMap">
		INSERT INTO ANALS_AREA_MANAGE
		 (ANALS_AREA_ID, GRID_INTRST_SE_CODE ,INTRST_AREA_NM,INTRST_AREA_LC,TPGRPH_AL,REGIST_DT,REGISTER_ID,CHANGE_DT,CHANGER_ID,PREDICT_AL,UTMX,UTMY,GRID_AREA_ID)
		 SELECT (SELECT  MAX(CAST(ANALS_AREA_ID AS INT))+1 AS MAX_AREA_ID 
		   FROM ANALS_AREA_MANAGE ),'ANL01002' ,INTRST_AREA_NM,INTRST_AREA_LC,TPGRPH_AL,REGIST_DT,REGISTER_ID,CHANGE_DT,CHANGER_ID,'${predictAl}',UTMX,UTMY,GRID_AREA_ID
		 FROM ANALS_AREA_MANAGE
		 WHERE GRID_INTRST_SE_CODE = 'ANL01001'
		 AND GRID_AREA_ID = #{indexId}
	</insert>
	<update id="updateAnals" parameterType="java.util.HashMap">
		UPDATE ANALS_AREA_MANAGE SET PREDICT_AL = #{predictAl} WHERE GRID_INTRST_SE_CODE = 'ANL01001' AND GRID_AREA_ID = #{indexId}
	</update>
	
	<delete id="deleteAnals" parameterType="java.util.HashMap">
		DELETE FROM ANALS_AREA_MANAGE
	      WHERE GRID_INTRST_SE_CODE = 'ANL01002' 
		  AND GRID_AREA_ID = #{indexId}
	</delete>
	
	<select id="complaintStatusFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CVPL_NO,
			   LO AS POINT_X,
			   LA AS POINT_Y,
			   CVPL_TY_CODE,
			   CVPL_LC
  		  FROM CVPL_MANAGE
  		 WHERE LA IS NOT NULL
           AND LO IS NOT NULL
  		  <if test="flag != 1">
	  		   AND DATE_FORMAT(CVPL_DT,'%Y%m%d') <![CDATA[>=]]> #{startDate}
	     	   AND DATE_FORMAT(CVPL_DT,'%Y%m%d') <![CDATA[<=]]> #{endDate}
	     	   <if test="branchName != ''">
	    			AND CVPL_CN LIKE CONCAT('%', #{branchName}, '%')
	  			</if>
	  			AND CVPL_TY_CODE IN
	  			<foreach collection="checkBox" item="type" index="index" open="(" separator="," close=")">
					#{type}
	  			</foreach>	
	     	   AND LEGALDONG_CODE LIKE CONCAT('%', #{town}, '%')
     	   </if>
	</select>
	
	<select id="complaintStatusGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CVPL_NO,
	           DATE_FORMAT(CVPL_DT,'%Y년 %m월 %d일 %h시') AS CVPL_DT,
			   CPTTR,
			   CPTTR_CTTPC,
			   CVPL_LC,
			   CVPL_CN,
			   DATE_FORMAT(REGIST_DT,'%Y년 %m월 %d일 %h시') AS REGIST_DT,
			   REGISTER_ID,
			   CHANGE_DT,
			   CHANGER_ID
  		  FROM CVPL_MANAGE
  		  <if test="flag == 1">
  		   	WHERE CVPL_NO IN (${code})
  		  </if>
  		  <if test="flag != 1">
	  		 WHERE DATE_FORMAT(CVPL_DT,'%Y%m%d') <![CDATA[>=]]> #{startDate}
	     	   AND DATE_FORMAT(CVPL_DT,'%Y%m%d') <![CDATA[<=]]> #{endDate}
	     	   AND LA IS NOT NULL
	     	   <if test="branchName != ''">
	    			AND CVPL_CN LIKE CONCAT('%', #{branchName}, '%')
	  			</if>
	  			AND CVPL_TY_CODE IN
	  			<foreach collection="checkBox" item="type" index="index" open="(" separator="," close=")">
					#{type}
	  			</foreach>	
	     	   AND LEGALDONG_CODE LIKE CONCAT('%', #{town}, '%')
     	   </if>
	</select>
	
	<select id="complaintStatusClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT DATE_FORMAT(CVPL_DT,'%Y년 %m월 %d일 %h시') AS CVPL_DT,
			   LO AS POINT_X,
			   LA AS POINT_Y,
			   CVPL_LC,
			   CVPL_CN
  		  FROM CVPL_MANAGE
  		 WHERE CVPL_NO = #{CVPL_NO}
	</select>
	
	<select id="portableMeasurementGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
			   B.OPR_STTUS_CODE,
			   LA AS POINT_Y,
	   		   LO AS POINT_X,
	   		   CONCAT( CASE WHEN A.SPOT_CODE='0005' THEN '1호 ' WHEN A.SPOT_CODE='0006' THEN '2호 ' END,DATE_FORMAT(MESURE_DT,'%Y년%m월%d일')) AS LABEL,
	   		   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL',
			   DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE
  		  FROM IOT_SENSOR_MESURE_INFO A,
	   		   IOT_SENSOR_SPCS_INFO B,
	     	   IOT_MESURE_IEM_MANAGE C
 		 WHERE A.SPOT_CODE IN (#{radio})
   		   AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE,A.SENSOR_SPCS_NO) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE,B.SENSOR_SPCS_NO)
   		   AND C.IEM_CODE = B.IEM_CODE
   		   AND A.LEGALDONG_CODE LIKE CONCAT('%', #{town}, '%')
   		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H') <![CDATA[>=]]> CONCAT(#{startDate},#{startTime})
     	   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H') <![CDATA[<=]]> CONCAT(#{endDate},#{endTime})
	  GROUP BY CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE),OPR_STTUS_CODE,MESURE_DNSTY, POINT_X,POINT_Y,MESURE_DT
	</select>
	
	<select id="portableMeasurementFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
	   		   DATE_FORMAT(MESURE_DT,'%m/%d %H:%i') AS LABEL,
	   		   LO AS POINT_X,
	   		   LA AS POINT_Y,
	   		   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL',
			   DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE
  		  FROM IOT_SENSOR_MESURE_INFO A
 		 WHERE A.SPOT_CODE IN (#{radio})
   		   AND A.LEGALDONG_CODE LIKE CONCAT('%', #{town}, '%')
   		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H') <![CDATA[>=]]> CONCAT(#{startDate},#{startTime})
     	   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H') <![CDATA[<=]]> CONCAT(#{endDate},#{endTime})
	  GROUP BY CODE,LABEL,MESURE_DT,DATE,POINT_X,POINT_Y
	</select>
	
	<select id="fixedMeasurementGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
			   B.SENSOR_NM,
               OPR_STTUS_CODE,
			   DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE,
			   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL' 
  		  FROM bdsm.IOT_SENSOR_MESURE_INFO A,
	   		   bdsm.IOT_SENSOR_INFO B
		 WHERE  SENSOR_TY_CODE = 'SEN01001'
  		   AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE)
  		   AND A.LEGALDONG_CODE LIKE CONCAT(#{town}, '%')
   		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') = CONCAT(#{startDate},#{startTime},#{startMinute})
   		   AND A.SPOT_CODE NOT IN ('0003')
     	    <if test="branchName != ''">
    			AND B.SENSOR_NM LIKE CONCAT('%', #{branchName}, '%')
  			</if>
  	  GROUP BY CODE,B.SENSOR_NM,OPR_STTUS_CODE,DATE,MESURE_DT
	</select>
	<select id="chartFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		 SELECT CONCAT(LEGALDONG_CODE,SPOT_CODE) AS CODE,SENSOR_NM,SENSOR_TY_CODE,LO,LA
               FROM bdsm.IOT_SENSOR_INFO
			  WHERE LO IS NOT NULL 
                AND SENSOR_TY_CODE != 'SEN01004'
	</select>
	<select id="fixedMeasurementFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
                OPR_STTUS_CODE,
                SENSOR_NM,
                A.LA AS POINT_Y,
                A.LO AS POINT_X,
                MESURE_DT,
                DATE,
                VOCS,
                CCNT,
			   NH3,
			   ERCRT,
			   H2S,
			   ARCSR,
			   OU,
			   SOLRAD,
			   HD,
			   TMPRT,
			   WD,
			   WS,
			   NO2,
			   SO2,
			   PM10,
			   PM2_5,
			   CFC,
			   CH3SH,
			   TMA,
			   ETHANOL
           FROM (SELECT * 
				   FROM bdsm.IOT_SENSOR_INFO
		          WHERE SENSOR_TY_CODE = 'SEN01001'
                    AND SPOT_CODE NOT IN ('0003')
                    AND LO IS NOT NULL
                    AND LEGALDONG_CODE LIKE CONCAT(#{town},'%')
                    <if test="branchName != ''">
    					AND SENSOR_NM LIKE CONCAT('%', #{branchName}, '%')
  					</if>
  					) AS A
LEFT OUTER JOIN (SELECT A.SPOT_CODE,
						A.LEGALDONG_CODE,DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE,
			   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL' 
  FROM bdsm.IOT_SENSOR_MESURE_INFO A
  WHERE DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') = CONCAT(#{startDate},#{startTime},#{startMinute})
GROUP BY A.SPOT_CODE,A.LEGALDONG_CODE,DATE,MESURE_DT) AS B
  		     ON CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE)
	</select>
	
	<select id="portableMeasurementClick" parameterType="String" resultType="java.util.HashMap">
	   	SELECT LO AS POINT_X,LA AS POINT_Y,DATE_FORMAT(A.MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS SENSOR_ID,OPR_STTUS_CODE
  		   FROM IOT_SENSOR_MESURE_INFO A,
		        IOT_SENSOR_SPCS_INFO B
		  WHERE CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE,A.SENSOR_SPCS_NO) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE,B.SENSOR_SPCS_NO)
		    AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = #{CODE}
  			AND DATE_FORMAT(A.MESURE_DT,'%Y%m%d%H%i') = #{DATE}
       GROUP BY POINT_X,POINT_Y,MESURE_DT,SENSOR_ID,OPR_STTUS_CODE
	</select>
	
	<select id="fixedMeasurementClick" parameterType="String" resultType="java.util.HashMap">
				 SELECT CONCAT(CTPRVN_NM,' ',SIGNGU_NM,' ',EMD_NM,' ',DONGLI_NM) AS ADDR, SENSOR_NM, CONCAT(A.LEGALDONG_CODE,SPOT_CODE) AS CODE, LA AS POINT_Y, LO AS POINT_X
				   FROM bdsm.IOT_SENSOR_INFO A,
                        bdsm.LEGALDONG_CODE B
		          WHERE A.LEGALDONG_CODE = B.LEGALDONG_CODE
                    AND SENSOR_TY_CODE = 'SEN01001'
                    AND SPOT_CODE NOT IN ('0003')
                    AND CONCAT(A.LEGALDONG_CODE,SPOT_CODE) = #{CODE}
	</select>
	
	<select id="getCity" parameterType="String" resultType="java.util.HashMap">
		 SELECT SIGNGU_NM AS NAME, 
		        SUBSTR(LEGALDONG_CODE,1,5) AS CODE
    	   FROM LEGALDONG_CODE
   		  WHERE LEGALDONG_CODE LIKE '4311%' 
     		AND EMD_NM != ''
	   GROUP BY SIGNGU_NM
       ORDER BY SIGNGU_NM
	</select>
	
	<select id="getTown" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		     SELECT SUBSTR(SIGNGU_NM,4,3) AS SIGNGU_NM,EMD_NM AS NAME, SUBSTR(LEGALDONG_CODE,1,8) AS CODE
    		 FROM bdsm.LEGALDONG_CODE
			WHERE LEGALDONG_CODE LIKE '4311%'
              AND EMD_NM != ''
              AND SIGNGU_NM != ''
		 GROUP BY EMD_NM, SUBSTR(SIGNGU_NM,4,3)
		 ORDER BY SUBSTR(SIGNGU_NM,4,3), EMD_NM
	</select>
	
	<select id="getPOISelect" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT LCLASDC,
	   	   MLSFCDC,
	   	   SCLASDC
     FROM ( SELECT DISTINCT MLSFCDC,LCLASDC,SCLASDC
  			  FROM shp_poi A
 ORDER BY LCLASDC,MLSFCDC) AA
	</select>
	<select id="getPOISearch" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT POIID,
		 	 LCLASDC,
		 	 MLSFCDC,
		 	 SCLASDC,
		 	 FMYNM,
		 	 ETCADRES
    	FROM shp_poi
    	WHERE 1=1
    	<if test="!poiSelect01.equals('전체')">
    		<if test="!poiSelect02.equals('전체')">
    			<if test="poiSelect03.equals('전체')">
    				AND MLSFCDC = #{poiSelect02}
    			</if>
    			<if test="!poiSelect03.equals('전체')">
    				AND SCLASDC =  #{poiSelect03} 
    			</if>
    		</if>
    		<if test="poiSelect02.equals('전체')">
    			AND LCLASDC = #{poiSelect01} 
    		</if>
    	</if>
	 	 <if test="poiText != null">
    			AND FMYNM LIKE CONCAT('%',#{poiText},'%')
  		</if>
	 	 
	</select>
	
	<select id="getArea" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT   ANALS_AREA_ID,
		       INTRST_AREA_NM,
		       INTRST_AREA_LC,
		       TPGRPH_AL,
		       PREDICT_AL,
		       UTMX,
		       UTMY
		  FROM ANALS_AREA_MANAGE
		 WHERE GRID_INTRST_SE_CODE = 'ANL01001' 
	 	 <if test="analsAreaId != null">
    			AND GRID_AREA_ID = #{analsAreaId}
  		</if>
	</select>
	
	<select id="odorOriginGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT BPLC_ID,
			  CASE WHEN BSML_TRGNPT_SE_CODE = 'BSL01001' THEN '산업단지' 
				  WHEN BSML_TRGNPT_SE_CODE = 'BSL01002' THEN '양돈장' 
                  WHEN BSML_TRGNPT_SE_CODE = 'BSL01003' THEN '환경시설' 
                  WHEN BSML_TRGNPT_SE_CODE = 'BSL01004' THEN '양계장' 
             ELSE '-' END AS BSML_TRGNPT_SE_CODE,
             CMPNY_NM,
             LEGALDONG_ETC,
             TELNO,INDUTY,
             ERTHSF_AL
  		FROM bdsm.BPLC_INFO
 	   WHERE LEGALDONG_CODE LIKE  CONCAT(#{town}, '%')
 	   <if test="branchName != ''">
   	     AND CMPNY_NM LIKE CONCAT('%', #{branchName}, '%')
   	   </if>
	</select>
	
	<select id="sensoryEvaluationFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT SENSE_EVL_NO,POINT_X,POINT_Y,BSML_FQ
  		FROM SHP_SENSE_EVL_REAL A
	LEFT OUTER JOIN SENSE_EVL B
  		  ON A.SENSE_EVL_ = B.SENSE_EVL_NO
  	WHERE BSML_FQ <![CDATA[>=]]> #{startOU}
	  AND BSML_FQ <![CDATA[<=]]> #{endOU}
	  AND ADM_CODE LIKE CONCAT(#{town}, '%') 
	</select>
	
	<select id="sensoryEvaluationClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT SENSE_EVL_NO,ADD_TEXT,ROUND(BSML_FQ ,1) AS BSML_FQ ,POINT_X,POINT_Y
  		FROM SHP_SENSE_EVL_REAL A
	LEFT OUTER JOIN SENSE_EVL B
  		  ON A.SENSE_EVL_ = B.SENSE_EVL_NO
  	  WHERE SENSE_EVL_NO = #{SENSE_EVL_NO}
	</select>
	
	<select id="sensoryEvaluationGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT SENSE_EVL_NO, ADD_TEXT, BSML_FQ, 
				   CONCAT(SUBSTR(MESURE_DATE,1,4),'년 ',SUBSTR(MESURE_DATE,6,2),'월 ',SUBSTR(MESURE_DATE,9,2),'일 ',SUBSTR(MESURE_TIME,1,2),'시 ',SUBSTR(MESURE_TIME,4,2),'분') AS MESURE_DATE
            FROM bdsm.SHP_SENSE_EVL_REAL A,
                 bdsm.SENSE_EVL B
		 WHERE A.SENSE_EVL_ = B.SENSE_EVL_NO
		   AND BSML_FQ <![CDATA[>=]]> #{startOU}
	  	   AND BSML_FQ <![CDATA[<=]]> #{endOU}
	  	   AND ADM_CODE LIKE CONCAT(#{town}, '%') 
	</select>
	
	<select id="environmentCorporationItem" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  SELECT DISTINCT NTWK_NM AS NAME
	    FROM AIRKOREA_MSRSTN_INFO 
	ORDER BY NTWK_NM
	</select>
	
	<select id="environmentCorporationGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  	   SELECT CODE,
		          NAME,
			      DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시') AS MESURE_DT,
				  SO2_DNSTY,
				  CMO_DNSTY,
				  OZ_DNSTY,
				  NO2_DNSTY,
				  PM10_DNSTY,
				  PM10_HOUR24_PREDICT_MVMN_DNSTY,
				  PM25_DNSTY,
				  PM25_HOUR24_PREDICT_MVMN_DNSTY,
				  UNITY_AIR_ENVRN_NCL,
				  UNITY_AIR_ENVRN_IDEX,
				  SO2_IDEX,
				  CMO_IDEX,
				  OZ_IDEX,
				  NO2_IDEX,
				  PM10_HOUR24_GRAD,
				  PM25_HOUR24_GRAD,
				  PM10_HOUR1_GRAD,
				  PM25_HOUR1_GRAD
  		FROM SHP_AIRKOREA_MSRSTN A
	LEFT OUTER JOIN AIRKOREA_MESURE_INFO B
  		  ON A.CODE = B.MSRSTN_ID
  		 WHERE DATE_FORMAT(MESURE_DT,'%Y%m%d%H') <![CDATA[>=]]> CONCAT(#{startDate},#{startTime})
     	   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H') <![CDATA[<=]]> CONCAT(#{endDate},#{endTime})
		   AND NTWK_NM = #{item}
		   AND ADM_CODE LIKE CONCAT(#{town},'%')
		   <if test="branchName != ''">
   	     		AND NAME LIKE CONCAT('%', #{branchName}, '%')
   	   	   </if>
	</select>
	
	<select id="environmentCorporationClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  	   SELECT NAME,
	  	   		  CODE,
	    		  CONCAT(ADDR,' ',ADDR_DETAI) AS ADDR,
			      POINT_X,
			      POINT_Y
 		     FROM bdsm.SHP_AIRKOREA_MSRSTN
		  	WHERE CODE = #{CODE}
	</select>
	<select id="environmentCorporationFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  	  SELECT CODE,
				  NAME,
				  POINT_X,
				  POINT_Y
			 FROM bdsm.SHP_AIRKOREA_MSRSTN
		    WHERE ADM_CODE LIKE CONCAT('4311','%')
		    
		    <if test="branchName != ''">
              AND NAME LIKE CONCAT('%', #{branchName}, '%')
            </if>
              AND ADM_CODE LIKE CONCAT(#{town},'%')
	</select>
	<select id="unmannedOdorFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	  	 SELECT CONCAT(LEGALDONG_CODE,SPOT_CODE) AS CODE,LO AS POINT_X,LA AS POINT_Y, SENSOR_NM
  		   FROM bdsm.IOT_SENSOR_INFO
 		  WHERE SENSOR_TY_CODE = 'SEN01003'
 		    AND LEGALDONG_CODE LIKE CONCAT(#{town},'%')
 		     <if test="branchName != ''">
    			AND SENSOR_NM LIKE CONCAT('%', #{branchName}, '%')
  			</if>  
	</select>
	<select id="unmannedOdorGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
			   C.OPR_STTUS_CODE,
			   B.SENSOR_NM,
			   DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE,
			   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL' 
  		  FROM bdsm.IOT_SENSOR_MESURE_INFO A,
	   		   bdsm.IOT_SENSOR_INFO B,
	   		   bdsm.IOT_SENSOR_SPCS_INFO C,
	   		   bdsm.IOT_MESURE_IEM_MANAGE D
		 WHERE SENSOR_TY_CODE = 'SEN01003'
  		   AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE)
  		   AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE,A.SENSOR_SPCS_NO) = CONCAT(C.LEGALDONG_CODE,C.SPOT_CODE,C.SENSOR_SPCS_NO)
  		   AND CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE) = CONCAT(C.LEGALDONG_CODE,C.SPOT_CODE)
  		   AND D.IEM_CODE = C.IEM_CODE
  		   AND A.LEGALDONG_CODE LIKE CONCAT('%', #{town}, '%')
  		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') <![CDATA[>=]]> CONCAT(#{startDate},#{startTime},#{startMinute})
  		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') <![CDATA[<=]]> CONCAT(#{endDate},#{endTime},#{endMinute})
     	    <if test="branchName != ''">
    			AND B.SENSOR_NM LIKE CONCAT('%', #{branchName}, '%')
  			</if>
           GROUP BY CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE),OPR_STTUS_CODE,MESURE_DNSTY,MESURE_DT,SENSOR_NM
	</select>
	
	<select id="unmannedOdorClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT LC AS ADDR, SENSOR_NM, CONCAT(LEGALDONG_CODE,SPOT_CODE) AS CODE, LA AS POINT_Y, LO AS POINT_X
  	  FROM bdsm.IOT_SENSOR_INFO
 	 WHERE SENSOR_TY_CODE = 'SEN01003'
       AND CONCAT(LEGALDONG_CODE,SPOT_CODE) = #{CODE}
	</select>
	
	<select id="observatoryFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT STATION_ID, 
		   POINT_X, 
		   POINT_Y,
		   NAME
      FROM bdsm.SHP_OBSR_SPOT
     WHERE ADM_CODE LIKE CONCAT(#{town},'%')
       AND STATION_ID = '131'
	</select>
	
	<select id="observatoryGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT STATION_ID, 
		  NAME, 
          CONCAT(SUBSTR(OBSR_TIME,1,4),'년 ',SUBSTR(OBSR_TIME,5,2),'월 ',SUBSTR(OBSR_TIME,7,2),'일 ',SUBSTR(OBSR_TIME,9,2),'시') AS OBSR_TIME, 
          CASE WHEN TRUNCATE(MIN60_ACCMLT_RAINFL,1) =-99.9 THEN 0 ELSE MIN60_ACCMLT_RAINFL END AS MIN60_ACCMLT_RAINFL,
          CASE WHEN TRUNCATE(DE_RAINFL,1) =-99.9 THEN 0 ELSE DE_RAINFL END AS DE_RAINFL,
          TMPRT, 
          MXMM_MONT_WD, 
          MXMM_MONT_WS, 
          MIN10_AVRG_WD, 
          MIN10_AVRG_WS, 
          HD
  		FROM bdsm.SHP_OBSR_SPOT A,
             bdsm.AWS_OBSR_INFO B
	   WHERE A.STATION_ID = B.OBSR_SPOT_ID
         AND STATION_ID = '131'
         AND A.ADM_CODE LIKE CONCAT(#{town},'%')
         AND CONCAT(SUBSTR(OBSR_TIME,1,4),SUBSTR(OBSR_TIME,5,2),SUBSTR(OBSR_TIME,7,2),SUBSTR(OBSR_TIME,9,2)) <![CDATA[>=]]> CONCAT(#{startDate},#{startTime})
  		 AND CONCAT(SUBSTR(OBSR_TIME,1,4),SUBSTR(OBSR_TIME,5,2),SUBSTR(OBSR_TIME,7,2),SUBSTR(OBSR_TIME,9,2)) <![CDATA[<=]]> CONCAT(#{endDate},#{endTime})
	</select>
	
	<select id="observatoryClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT STATION_ID,POS,NAME, POINT_X, POINT_Y
                FROM bdsm.SHP_OBSR_SPOT
			   WHERE STATION_ID = #{STATION_ID}
	</select>
	
	<select id="iotSensorInfoFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT TAB.POINT_X,
			   TAB.POINT_Y,
			   VOCS,
                CCNT,
			   NH3,
			   ERCRT,
			   H2S,
			   ARCSR,
			   OU,
			   SOLRAD,
			   HD,
			   TMPRT,
			   WD,
			   WS,
			   NO2,
			   SO2,
			   PM10,
			   PM2_5,
			   CFC,
			   CH3SH,
			   TMA,
			   ETHANOL,
			   SENSOR_NM
			    FROM (
SELECT CASE WHEN LO IS NULL THEN POINT_X ELSE LO END AS POINT_X,
			CASE WHEN LA IS NULL THEN POINT_Y ELSE LA END AS POINT_Y,
			VOCS,
                CCNT,
			   NH3,
			   ERCRT,
			   H2S,
			   ARCSR,
			   OU,
			   SOLRAD,
			   HD,
			   TMPRT,
			   WD,
			   WS,
			   NO2,
			   SO2,
			   PM10,
			   PM2_5,
			   CFC,
			   CH3SH,
			   TMA,
			   ETHANOL,
			   SENSOR_NM
	  FROM ( SELECT * 
			   FROM bdsm.IOT_SENSOR_INFO
			  WHERE SENSOR_TY_CODE = #{radio}
			) AA
LEFT OUTER JOIN ( SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
					   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
                       LA AS POINT_Y,
                       LO AS POINT_X,
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
					   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL',
                       DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE
				FROM bdsm.IOT_SENSOR_MESURE_INFO A
                WHERE DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') = CONCAT(#{startDate},#{startTime},#{startMinute})
                 GROUP BY CODE,MESURE_DT,POINT_Y,POINT_X
			 ) BB
		ON CONCAT(AA.LEGALDONG_CODE,AA.SPOT_CODE) = CODE) TAB
WHERE TAB.POINT_X IS NOT NULL
	</select>
	
	<!-- 관심지역 -->
	<select id="getIntrstList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT ANALS_AREA_ID AS "analsAreaId", 
	       INTRST_AREA_NM AS "intrstAreaNm", 
	       GRID_AREA_ID AS "gridAreaId" 
      FROM ANALS_AREA_MANAGE 
     WHERE GRID_INTRST_SE_CODE = 'ANL01002'
	</select>
	<!-- 센서 -->
	<select id="getSensorList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT SPOT_CODE AS "spotCode", 
	       SENSOR_NM AS "sensorNm",
	       LA AS "latitude",
	       LO AS "longitude"
	  FROM IOT_SENSOR_INFO 
	 WHERE SENSOR_TY_CODE = 'SEN01001' AND ( LA IS NOT NULL AND LO IS NOT NULL)
	</select>
	
	<select id="getCoursModel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT ANALS_AREA_ID AS "analsAreaId", 
	       DATE_FORMAT(DTA_DT,'%Y%m%d%H') AS "dtaDt", 
	       SN AS "sn", 
	       REPLACE(FORMAT(UTMX,0),',','') AS "utmx", 
	       REPLACE(FORMAT(UTMY,0),',','') AS "utmy" 
	  FROM ${tableNm}
	 WHERE ANALS_AREA_ID = #{analsAreaId} AND DATE_FORMAT(DTA_DT,'%Y%m%d%H') = #{dtaDt}
	</select>
	<select id="getCoursModelBySensor" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT SPOT_CODE AS "analsAreaId", 
	       DATE_FORMAT(DTA_DT,'%Y%m%d%H') AS "dtaDt", 
	       SN AS "sn", 
	       REPLACE(FORMAT(UTMX,0),',','') AS "utmx", 
	       REPLACE(FORMAT(UTMY,0),',','') AS "utmy" 
	  FROM RLTM_SENSOR_MVMN_COURS_MODEL
	 WHERE SPOT_CODE = #{analsAreaId} AND DATE_FORMAT(DTA_DT,'%Y%m%d%H')  = #{dtaDt}
	</select>
	
	<select id="odorReductionGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT A.BPLC_ID,
               A.REDUC_EQP_NM,
               A.REGISTER_ID,
               CMPNY_NM,
               LEGALDONG_ETC,
			   TELNO
          FROM bdsm.BSML_REDUC_EQP_INFO A,
               bdsm.BPLC_INFO C
		 WHERE A.BPLC_ID = C.bplc_id
		   AND C.LEGALDONG_CODE LIKE CONCAT(#{town},'%')
		   <if test="branchName != ''">
    			AND CMPNY_NM LIKE CONCAT('%', #{branchName}, '%')
  			</if>
	</select>
	<select id="getChart" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
			   B.SENSOR_NM, 
               OPR_STTUS_CODE,
			   DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE,
			   DATE_FORMAT(MESURE_DT,'%Y.%m.%d %H:%i') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL'
  		  FROM bdsm.IOT_SENSOR_MESURE_INFO A,
	   		   bdsm.IOT_SENSOR_INFO B
  		   WHERE CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE)
  		   AND B.LA IS NOT NULL
           AND B.LO IS NOT NULL
   		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H') = ( SELECT DATE_FORMAT(MAX(MESURE_DT),'%Y%m%d%H') FROM bdsm.IOT_SENSOR_MESURE_INFO WHERE CONCAT(LEGALDONG_CODE,SPOT_CODE) = #{code})
     	   AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = #{code}
  		   GROUP BY CODE,B.SENSOR_NM,OPR_STTUS_CODE,DATE,MESURE_DT
	</select>
	<select id="reductionMonitoringGrid" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		 SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
			   B.SENSOR_NM,
               OPR_STTUS_CODE,
			   DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE,
			   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL' 
  		  FROM bdsm.IOT_SENSOR_MESURE_INFO A,
	   		   bdsm.IOT_SENSOR_INFO B
		 WHERE  SENSOR_TY_CODE = 'SEN01004'
  		   AND CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE)
  		   AND A.LEGALDONG_CODE LIKE CONCAT(#{town}, '%')
   		   AND DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') = CONCAT(#{startDate},#{startTime},#{startMinute})
     	    <if test="branchName != ''">
    			AND B.SENSOR_NM LIKE CONCAT('%', #{branchName}, '%')
  			</if>
  		   GROUP BY CODE,B.SENSOR_NM,OPR_STTUS_CODE,DATE,MESURE_DT;
	</select>
	
	<select id="reductionMonitoringClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(CTPRVN_NM,' ',SIGNGU_NM,' ',EMD_NM,' ',DONGLI_NM) AS ADDR, SENSOR_NM, CONCAT(A.LEGALDONG_CODE,SPOT_CODE) AS CODE, LA AS POINT_Y, LO AS POINT_X
				   FROM bdsm.IOT_SENSOR_INFO A,
                        bdsm.LEGALDONG_CODE B
		          WHERE A.LEGALDONG_CODE = B.LEGALDONG_CODE
                    AND SENSOR_TY_CODE = 'SEN01004'
                    AND CONCAT(A.LEGALDONG_CODE,SPOT_CODE) = #{CODE}
	</select>
	
	<select id="chartClick" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		 SELECT CONCAT(LEGALDONG_CODE,SPOT_CODE) AS CODE,SENSOR_NM
               FROM bdsm.IOT_SENSOR_INFO
			 WHERE CONCAT(LEGALDONG_CODE,SPOT_CODE) = #{code}
	</select>
	
	<select id="reductionMonitoringFeature" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) AS CODE,
                OPR_STTUS_CODE,
                SENSOR_NM,
                A.LA AS POINT_Y,
                A.LO AS POINT_X,
                MESURE_DT,
                DATE,
                VOCS,
                CCNT,
			   NH3,
			   ERCRT,
			   H2S,
			   ARCSR,
			   OU,
			   SOLRAD,
			   HD,
			   TMPRT,
			   WD,
			   WS,
			   NO2,
			   SO2,
			   PM10,
			   PM2_5,
			   CFC,
			   CH3SH,
			   TMA,
			   ETHANOL
           FROM (SELECT * 
				   FROM bdsm.IOT_SENSOR_INFO
		          WHERE SENSOR_TY_CODE = 'SEN01004'
                    AND LO IS NOT NULL
                    AND LEGALDONG_CODE LIKE CONCAT(#{town},'%')
                    <if test="branchName != ''">
    					AND SENSOR_NM LIKE CONCAT('%', #{branchName}, '%')
  					</if>
  					) AS A
LEFT OUTER JOIN (SELECT A.SPOT_CODE,
						A.LEGALDONG_CODE,DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') AS DATE,
			   DATE_FORMAT(MESURE_DT,'%Y년 %m월 %d일 %H시 %i분') AS MESURE_DT,
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='1' THEN MESURE_DNSTY END),3) AS 'VOCS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='2' THEN MESURE_DNSTY END),3) AS 'CCNT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='3' THEN MESURE_DNSTY END),3) AS 'NH3',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='4' THEN MESURE_DNSTY END),3) AS 'ERCRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='5' THEN MESURE_DNSTY END),3) AS 'H2S',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='6' THEN MESURE_DNSTY END),3) AS 'ARCSR',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='7' THEN MESURE_DNSTY END),3) AS 'OU',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='8' THEN MESURE_DNSTY END),3) AS 'SOLRAD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='9' THEN MESURE_DNSTY END),3) AS 'HD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='10' THEN MESURE_DNSTY END),3) AS 'TMPRT',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='11' THEN MESURE_DNSTY END),3) AS 'WD',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='12' THEN MESURE_DNSTY END),3) AS 'WS',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='13' THEN MESURE_DNSTY END),3) AS 'NO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='14' THEN MESURE_DNSTY END),3) AS 'SO2',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='15' THEN MESURE_DNSTY END),3) AS 'PM10',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='16' THEN MESURE_DNSTY END),3) AS 'PM2_5',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='17' THEN MESURE_DNSTY END),3) AS 'CFC',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='18' THEN MESURE_DNSTY END),3) AS 'CH3SH',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='19' THEN MESURE_DNSTY END),3) AS 'TMA',
			   TRUNCATE(SUM(CASE WHEN A.SENSOR_SPCS_NO='20' THEN MESURE_DNSTY END),3) AS 'ETHANOL' 
  FROM bdsm.IOT_SENSOR_MESURE_INFO A
  WHERE DATE_FORMAT(MESURE_DT,'%Y%m%d%H%i') = CONCAT(#{startDate},#{startTime},#{startMinute})
GROUP BY A.SPOT_CODE,A.LEGALDONG_CODE,DATE,MESURE_DT) AS B
  		     ON CONCAT(A.LEGALDONG_CODE,A.SPOT_CODE) = CONCAT(B.LEGALDONG_CODE,B.SPOT_CODE)
	</select>
	
	<update id="updateSensor" parameterType="java.util.HashMap">
		UPDATE IOT_SENSOR_INFO SET LO = #{lo}, LA = #{la} WHERE SPOT_CODE = #{spotCode} AND SENSOR_TY_CODE = 'SEN01001'
	</update>
	
	<select id="getAnalsAreaId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT ANALS_AREA_ID AS "analsAreaId", 
		       GRID_AREA_ID AS "gridAreaId" 
		  FROM ANALS_AREA_MANAGE 
		 WHERE GRID_INTRST_SE_CODE = 'ANL01002'
		   AND GRID_AREA_ID = #{analsAreaId} 
	</select>
	<!-- 개발팀 csw -->
	<!-- 민원분류 -->
	<select id="getCvplTyCode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CODE, CODE_NM
		  FROM COM_CODE
		WHERE UPPER_CODE_NO=201
		ORDER BY SORT_ORDR
	</select>
	
	<!-- 청주시군구 조회 -->
	<select id="getSigunguCode" parameterType="Map" resultType="hashMap">
		SELECT SIGNGU_NM, LEGALDONG_CODE
		  FROM LEGALDONG_CODE
		 WHERE LEGALDONG_CODE LIKE CONCAT('4311','%')
		   AND EMD_NM = ''
		 ORDER BY LEGALDONG_CODE
	</select>
	
	<!-- 민원데이터 list -->
    <select id="getCvplDataManageList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
            SELECT DATE_FORMAT(CVPL_DT,'%Y-%m-%d %H시') AS CVPL_DE,
			       CPTTR,
			       CPTTR_CTTPC,
			       CVPL_LC,
			       CVPL_CN,
			       LA,
			       LO,
			       (SELECT CODE_NM FROM COM_CODE C WHERE C.UPPER_CODE_NO=201 AND CODE=CVPL_TY_CODE) AS CVPL_TY_NM,
			       CVPL_NO,
			       COUNT(1)OVER() AS DTA_CO
			  FROM (SELECT #{from_date} AS PARAMETER_1,
                           #{to_date} AS PARAMETER_2,
                           <choose>
                            <when test="cpttr !=null and cpttr !=''">
                            #{cpttr} AS PARAMETER_3,
                            </when>
                            <otherwise>
                            '' AS PARAMETER_3,
                            </otherwise>
                           </choose>
                           #{cvplTyCode} AS PARAMETER_4
			       ) A,
			       CVPL_MANAGE B
			 WHERE B.CVPL_DT BETWEEN DATE_FORMAT(CONCAT(RPAD(PARAMETER_1,8,'01'),'000000'),'%Y-%m-%d %T') AND IF(LENGTH(PARAMETER_2)=8,DATE_FORMAT(CONCAT(PARAMETER_2,'235959'),'%Y-%m-%d %T'),DATE_ADD(DATE_ADD(DATE_FORMAT(CONCAT(PARAMETER_2,'01'),'%Y-%m-%d %T'),INTERVAL 1 MONTH),INTERVAL -1 SECOND))
			   AND B.CPTTR LIKE CONCAT('%',PARAMETER_3,'%')
			   AND B.CVPL_TY_CODE = IF(A.PARAMETER_4='',B.CVPL_TY_CODE,A.PARAMETER_4)
			 ORDER BY CVPL_DT, CVPL_NO
    </select>
    
    <!-- 민원등록 -->
    <insert id="insertCvplData" parameterType="java.util.HashMap">
		INSERT INTO CVPL_MANAGE
        (
            CVPL_DT, CPTTR, CPTTR_CTTPC, LEGALDONG_CODE, CVPL_LC, CVPL_CN, REGIST_DT, REGISTER_ID, CHANGE_DT, CHANGER_ID, LA, LO, CVPL_TY_CODE
        )
        VALUES
        (
            #{date}, #{man}, #{phone}, #{addr}, #{direct}, #{contents}, SYSDATE(), 'cetech', SYSDATE(), 'cetech', #{y}, #{x}, #{flag}
        )
	</insert>
	
	<!-- 악취저감설비 정보 -->
	<select id="getBsmlReduceqpInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		WITH BASE AS
			(
			 SELECT A.BPLC_ID, A.REDUC_EQP_NO, A.REDUC_EQP_NM, B.BSML_TRGNPT_NM, PARAMETER_3
			   FROM (
			         SELECT B.BPLC_ID, B.REDUC_EQP_NO, B.REDUC_EQP_NM, PARAMETER_3
			           FROM (SELECT #{bplcId} AS PARAMETER_1, -- 돈사ID
			                        '' AS PARAMETER_2, -- 저감설비NO
			                        '' AS PARAMETER_3  -- 상태
			                ) A,
			                BSML_REDUC_EQP_INFO B
			          WHERE B.BPLC_ID=IF(PARAMETER_1='',B.BPLC_ID,PARAMETER_1)
			            AND B.REDUC_EQP_NO=IF(PARAMETER_2='',B.REDUC_EQP_NO,PARAMETER_2)
			        ) A,
			        BPLC_INFO B
			  WHERE B.BPLC_ID=A.BPLC_ID
			)
			SELECT
			       BPLC_ID, BSML_TRGNPT_NM, REDUC_EQP_NM, OPR_STTUS_NM, REDUC_EQP_NO, DTA_CO, CTRL_CN_CODE, BUTTON_USEABLE_AT
			  FROM (
			        SELECT A.BPLC_ID, A.BSML_TRGNPT_NM, A.REDUC_EQP_NM, B.OPR_STTUS_NM,
			               A.REDUC_EQP_NO,
			               COUNT(1)OVER() AS DTA_CO,
			               CASE WHEN B.OPR_STTUS_NM='ON' THEN 'COM08002 '
			                    WHEN B.OPR_STTUS_NM='OFF' THEN 'COM08001'
			                END AS CTRL_CN_CODE,
			               IF((SELECT COUNT(BPLC_ID) FROM BSML_REDUC_EQP_CTRL_HIST C WHERE C.BPLC_ID=A.BPLC_ID AND C.REDUC_EQP_NO=A.REDUC_EQP_NO AND C.CTRL_RESULT_CODE IS NULL)=0,'Y','N') AS BUTTON_USEABLE_AT,
			               CASE WHEN A.PARAMETER_3='' THEN ''
			                    WHEN A.PARAMETER_3='COM08001' THEN 'ON'
			                    WHEN A.PARAMETER_3='COM08002' THEN 'OFF'
			                END AS PARAMETER_3
			          FROM BASE A
			               LEFT JOIN
			               (SELECT BPLC_ID, REDUC_EQP_NO, 
			                       CASE WHEN OPR_STTUS_CODE IN ('COM02000','COM08001') THEN 'ON'
			                            WHEN OPR_STTUS_CODE IN ('COM02003','COM08002') THEN 'OFF'
			                        END AS OPR_STTUS_NM
			                  FROM (
			                        SELECT BPLC_ID, REDUC_EQP_NO, OPR_STTUS_CODE,
			                               ROW_NUMBER()OVER(PARTITION BY BPLC_ID, REDUC_EQP_NO ORDER BY DTA_DT DESC) AS RN
			                          FROM (
			                                SELECT DISTINCT B.BPLC_ID, B.REDUC_EQP_NO, B.DTA_DT, B.OPR_STTUS_CODE
			                                  FROM (
			                                        SELECT B.BPLC_ID, B.REDUC_EQP_NO,
			                                               MAX(DTA_DT) AS MAX_DATE
			                                          FROM BASE A,
			                                               BSML_REDUC_EQP_OPR_STTUS B
			                                         WHERE B.BPLC_ID=A.BPLC_ID
			                                           AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
			                                         GROUP BY B.BPLC_ID, B.REDUC_EQP_NO
			                                       ) A,
			                                       BSML_REDUC_EQP_OPR_STTUS B
			                                 WHERE B.BPLC_ID=A.BPLC_ID
			                                   AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
			                                   AND B.DTA_DT=A.MAX_DATE
			                                UNION
			                                SELECT DISTINCT B.BPLC_ID, B.REDUC_EQP_NO, B.EQP_CTRL_DT, B.CTRL_CN_CODE
			                                  FROM (
			                                        SELECT B.BPLC_ID, B.REDUC_EQP_NO,
			                                               MAX(EQP_CTRL_DT) AS MAX_DATE
			                                          FROM BASE A,
			                                               BSML_REDUC_EQP_CTRL_HIST B
			                                         WHERE B.BPLC_ID=A.BPLC_ID
			                                           AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
			                                           AND B.CTRL_RESULT_CODE='COM05000'
			                                         GROUP BY B.BPLC_ID, B.REDUC_EQP_NO
			                                       ) A,
			                                       BSML_REDUC_EQP_CTRL_HIST B
			                                 WHERE B.BPLC_ID=A.BPLC_ID
			                                   AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
			                                   AND B.EQP_CTRL_DT=A.MAX_DATE
			                               ) A
			                       ) A
			                 WHERE RN=1
			               ) B
			               ON (B.BPLC_ID=A.BPLC_ID
			               AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
			                  )
			       ) A
			 WHERE OPR_STTUS_NM=IF(PARAMETER_3='',OPR_STTUS_NM,PARAMETER_3)
			 ORDER BY BPLC_ID, BSML_TRGNPT_NM, REDUC_EQP_NM, REDUC_EQP_NO
	</select>
	
	<!-- 저감설비 원격제어 -->
	<insert id="insertOnOff" parameterType="java.util.HashMap">
		INSERT INTO BSML_REDUC_EQP_CTRL_HIST (BPLC_ID, REDUC_EQP_NO, CTRL_SE_CODE, CTRL_REQUST_DT, CTRL_CN_CODE, CNTLR_ID)
		VALUES (#{bplcId}, #{reducEqpNo}, 'COM04003',SYSDATE(),#{ctrlCnCode},'cetech');
	</insert>
	
	<!-- 센서 선택 - 이동식 -->
	<select id="getDeviceList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(SENSOR_NM,'(',SUBSTR(LEGALDONG_CODE,1,5),SPOT_CODE,')') AS SENSOR_NM
		     , LEGALDONG_CODE, SPOT_CODE
		  FROM IOT_SENSOR_INFO
		 WHERE SENSOR_TY_CODE='SEN01002'
		   AND USE_AT='Y'
		 ORDER BY SENSOR_NM
	</select>
	
	<!-- 센서 조회 - 이동식 -->
	<select id="getDeviceInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONCAT(SUBSTR(A.LEGALDONG_CODE,1,5),A.SPOT_CODE) AS SENSOR_ID
		     , MAX(C.SENSOR_NM) AS SENSOR_NM
		     , DATE_FORMAT(MIN(B.MESURE_DT),'%Y-%m-%d %T') AS START_DT -- KEY
		     , DATE_FORMAT(MAX(B.MESURE_DT),'%Y-%m-%d %T') AS END_DT -- KEY
		     , A.LA, A.LO 
		     , A.LEGALDONG_CODE, A.SPOT_CODE -- KEY
		     , COUNT(1)OVER() AS DTA_CO
		  FROM (
		        SELECT LEGALDONG_CODE, SPOT_CODE, DTA_DT, LA, LO
		             , DATE_ADD(NVL(LEAD(DTA_DT)OVER(PARTITION BY LEGALDONG_CODE, SPOT_CODE ORDER BY DTA_DT),SYSDATE()), INTERVAL -1 SECOND) AS END_DT
		             , PARAMETER_4
		          FROM (SELECT #{legaldongCode} AS PARAMETER_1 -- LEGALDONG_CODE
		                     , #{spotCode} AS PARAMETER_2 -- SPOT_CODE
		                     , #{from_date} AS PARAMETER_3 -- 조회시작일(필수:YYYYMMDD)
		                     , #{to_date} AS PARAMETER_4 -- 조회종료일(필수:YYYYMMDD)
		               ) A
		             , IOT_SENSOR_MVMN_INFO B
		         WHERE B.LEGALDONG_CODE=IF(A.PARAMETER_1='',B.LEGALDONG_CODE,A.PARAMETER_1)
		           AND B.SPOT_CODE=IF(A.PARAMETER_2='',B.SPOT_CODE,A.PARAMETER_2)
		           AND B.DTA_DT >= DATE_FORMAT(CONCAT(PARAMETER_3,'000000'),'%Y-%m-%d %T')
		       ) A
		     , IOT_SENSOR_MESURE_INFO B
		     , IOT_SENSOR_INFO C
		 WHERE A.DTA_DT &lt;= DATE_FORMAT(CONCAT(PARAMETER_4,'235959'),'%Y-%m-%d %T')
		   AND B.LEGALDONG_CODE=A.LEGALDONG_CODE
		   AND B.SPOT_CODE=A.SPOT_CODE
		   AND B.IEM_CODE='S0001'
		   AND B.MESURE_DT BETWEEN A.DTA_DT AND A.END_DT
		   AND C.LEGALDONG_CODE=B.LEGALDONG_CODE
		   AND C.SPOT_CODE=B.SPOT_CODE
		   AND C.USE_AT='Y'
		 GROUP BY A.LEGALDONG_CODE, A.SPOT_CODE, A.DTA_DT, A.LA, A.LO
		 ORDER BY C.SENSOR_NM, A.LEGALDONG_CODE, A.SPOT_CODE, A.DTA_DT
	</select>
	
	<!-- 센서 차트 조회 - 이동식 -->
	<select id="getDeviceChartList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		WITH BASE AS (
		SELECT PARAMETER_1 AS LEGALDONG_CODE
		     , PARAMETER_2 AS SPOT_CODE
		     , DATE_FORMAT(PARAMETER_3,'%Y-%m-%d %T') AS START_DT
		     , TIMESTAMPDIFF(DAY,DATE_FORMAT(PARAMETER_3,'%Y-%m-%d %T'), DATE_FORMAT(PARAMETER_4,'%Y-%m-%d %T'))+1 AS DE_CO
		     , PARAMETER_5 AS LA
		     , PARAMETER_6 AS LO
		  FROM (SELECT #{legaldongCode} AS PARAMETER_1 -- LEGALDONG_CODE (필수)
		             , #{spotCode} AS PARAMETER_2 -- SPOT_CODE (필수)
		             , #{startDt} AS PARAMETER_3 -- START_DT (필수)
		             , #{endDt} AS PARAMETER_4 -- END_DT (필수)
		             , #{la} AS PARAMETER_5 -- LA (위도)
		             , #{lo} AS PARAMETER_6 -- LO (경도)
		             
		       ) A
		)
		SELECT A.LEGALDONG_CODE, A.SPOT_CODE
		     , DATE_FORMAT(A.MESURE_START_DT,'%Y-%m-%d %H') AS MESURE_DT
		     , CAST(ROUND(AVG(B.MESURE_DNSTY),3) AS DOUBLE) AS AVG_VALUE
		     , DATE_FORMAT(MIN(MESURE_START_DT)OVER(),'%Y-%m-%d %H') AS START_DT
		     , DATE_FORMAT(MAX(MESURE_START_DT)OVER(),'%Y-%m-%d %H') AS END_DT
		     , A.LA, A.LO
		  FROM (
		        SELECT A.LEGALDONG_CODE, A.SPOT_CODE
		             , DATE_ADD(DATE_ADD(START_DT,INTERVAL C.NO-1 HOUR),INTERVAL B.NO-1 DAY) AS MESURE_START_DT
		             , DATE_ADD(DATE_ADD(DATE_ADD(START_DT,INTERVAL C.NO HOUR),INTERVAL B.NO-1 DAY),INTERVAL -1 SECOND) AS MESURE_END_DT
		             , LA, LO
		          FROM BASE A
		             , ROW_CREAT B
		             , ROW_CREAT C
		         WHERE B.NO &lt;= DE_CO
		           AND C.NO &lt;= 24
		       ) A
		       LEFT JOIN
		       IOT_SENSOR_MESURE_INFO B
		       ON (B.LEGALDONG_CODE=A.LEGALDONG_CODE
		       AND B.SPOT_CODE=A.SPOT_CODE
		       AND B.IEM_CODE='S0001'
		       AND B.MESURE_DT BETWEEN A.MESURE_START_DT AND MESURE_END_DT
		          )
		 GROUP BY A.LEGALDONG_CODE, A.SPOT_CODE, A.MESURE_START_DT
		 ORDER BY A.MESURE_START_DT
	</select>
	
	<!-- 악취발생예보 -->
	<select id="getForeCastOccurrence" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT SUM(CASE WHEN DTA_01 LIKE 'O%' THEN 1 ELSE 0 END) AS DTA_01_SUM
		     , SUM(CASE WHEN DTA_02 LIKE 'O%' THEN 1 ELSE 0 END) AS DTA_02_SUM
		     , SUM(CASE WHEN DTA_03 LIKE 'O%' THEN 1 ELSE 0 END) AS DTA_03_SUM
		     , SUM(CASE WHEN DTA_04 LIKE 'O%' THEN 1 ELSE 0 END) AS DTA_04_SUM
		  FROM (
		        SELECT ANALS_AREA_ID
		             , MAX(INTRST_AREA_NM) AS INTRST_AREA_NM
		             , MAX(PREDICT_AL) AS INTRST_AREA_AL
		             , MAX(IF(NO=1,EX_AT,NULL)) AS DTA_01
		             , MAX(IF(NO=2,EX_AT,NULL)) AS DTA_02
		             , MAX(IF(NO=3,EX_AT,NULL)) AS DTA_03
		             , MAX(IF(NO=4,EX_AT,NULL)) AS DTA_04
		          FROM (SELECT A.ANALS_AREA_ID, A.INTRST_AREA_NM, A.NO, A.PREDICT_AL,
		                       A.STDRVALUE, B.BSML_DNSTY,
		                       CASE WHEN B.BSML_DNSTY IS NULL THEN '-'
		                            WHEN B.BSML_DNSTY IS NOT NULL AND B.BSML_DNSTY > A.STDRVALUE THEN CONCAT('O(',B.BSML_DNSTY,')')
		                            WHEN B.BSML_DNSTY IS NOT NULL AND B.BSML_DNSTY &lt;= A.STDRVALUE THEN 'X'
		                        END AS EX_AT
		                  FROM (
		                        SELECT ANALS_AREA_ID, INTRST_AREA_NM, PREDICT_AL
		                             , CASE WHEN C.NO=1 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'000000'),'%Y-%m-%d %T')
		                                    WHEN C.NO=2 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'060000'),'%Y-%m-%d %T')
		                                    WHEN C.NO=3 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'120000'),'%Y-%m-%d %T')
		                                    WHEN C.NO=4 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'180000'),'%Y-%m-%d %T')
		                                END AS DTA_DT
		                             , STDRVALUE, NO
		                          FROM (
		                                SELECT #{nDate} AS PARAMETER_1, -- 예보일
		                                       '' AS PARAMETER_2, -- 시 (사용안함)
		                                       '' AS PARAMETER_3  -- 관심지역코드
		                               ) A,
		                               ANALS_AREA_MANAGE B,
		                               ROW_CREAT C,
		                               SMS_STDRVALUE_MANAGE D
		                         WHERE B.GRID_INTRST_SE_CODE='ANL01002'
		                           AND B.ANALS_AREA_ID=IF(A.PARAMETER_3='',B.ANALS_AREA_ID,A.PARAMETER_3)
		                           AND C.NO &lt;= 4
		                           AND D.SMS_SE_CODE='COM03002'
		                           AND D.IEM_CODE='S0001'
		                       ) A
		                       LEFT JOIN
		                       LRN_FRCST_AI B
		                       ON (B.ANALS_AREA_ID=A.ANALS_AREA_ID
		                       AND B.DTA_DT=A.DTA_DT
		                          )
		               ) A
		         GROUP BY ANALS_AREA_ID
		       ) A
	</select>
	
	<!-- 악취발생예보 - 건수선택 -->
	<select id="getForeCastOccurrenceSel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT ANALS_AREA_ID, INTRST_AREA_NM, INTRST_AREA_AL, DTA_01, DTA_02, DTA_03, DTA_04
		  FROM (
		        SELECT ANALS_AREA_ID
		             , MAX(INTRST_AREA_NM) AS INTRST_AREA_NM
		             , IFNULL(MAX(PREDICT_AL),'') AS INTRST_AREA_AL
		             , MAX(IF(NO=1,EX_AT,NULL)) AS DTA_01
		             , MAX(IF(NO=2,EX_AT,NULL)) AS DTA_02
		             , MAX(IF(NO=3,EX_AT,NULL)) AS DTA_03
		             , MAX(IF(NO=4,EX_AT,NULL)) AS DTA_04
		          FROM (SELECT A.ANALS_AREA_ID, A.INTRST_AREA_NM, A.NO, A.PREDICT_AL,
		                       A.STDRVALUE, B.BSML_DNSTY,
		                       CASE WHEN B.BSML_DNSTY IS NULL THEN '-'
		                            WHEN B.BSML_DNSTY IS NOT NULL AND B.BSML_DNSTY > A.STDRVALUE THEN CONCAT('O(',B.BSML_DNSTY,')')
		                            WHEN B.BSML_DNSTY IS NOT NULL AND B.BSML_DNSTY &lt;= A.STDRVALUE THEN 'X'
		                        END AS EX_AT
		                  FROM (
		                        SELECT ANALS_AREA_ID, INTRST_AREA_NM, PREDICT_AL
		                             , CASE WHEN C.NO=1 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'000000'),'%Y-%m-%d %T')
		                                    WHEN C.NO=2 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'060000'),'%Y-%m-%d %T')
		                                    WHEN C.NO=3 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'120000'),'%Y-%m-%d %T')
		                                    WHEN C.NO=4 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'180000'),'%Y-%m-%d %T')
		                                END AS DTA_DT
		                             , STDRVALUE, NO
		                          FROM (
		                                SELECT #{nDate} AS PARAMETER_1, -- 예보일
		                                       '' AS PARAMETER_2, -- 시 (사용안함)
		                                       '' AS PARAMETER_3  -- 관심지역코드
		                               ) A,
		                               ANALS_AREA_MANAGE B,
		                               ROW_CREAT C,
		                               SMS_STDRVALUE_MANAGE D
		                         WHERE B.GRID_INTRST_SE_CODE='ANL01002'
		                           AND B.ANALS_AREA_ID=IF(A.PARAMETER_3='',B.ANALS_AREA_ID,A.PARAMETER_3)
		                           AND C.NO &lt;= 4
		                           AND D.SMS_SE_CODE='COM03002'
		                           AND D.IEM_CODE='S0001'
		                       ) A
		                       LEFT JOIN
		                       LRN_FRCST_AI B
		                       ON (B.ANALS_AREA_ID=A.ANALS_AREA_ID
		                       AND B.DTA_DT=A.DTA_DT
		                          )
		               ) A
		         GROUP BY ANALS_AREA_ID
		       ) A
		  <if test="gubun == 1">
		  WHERE DTA_01 LIKE 'O%'  -- 필요에 따라(00-05)
		  </if>
		  <if test="gubun == 2">
		  WHERE DTA_02 LIKE 'O%'  -- 필요에 따라(06-11)
		  </if>
		  <if test="gubun == 3">
		  WHERE DTA_03 LIKE 'O%'  -- 필요에 따라(12-17)
		  </if>
		  <if test="gubun == 4">
		  WHERE DTA_04 LIKE 'O%'  -- 필요에 따라(18-23)
		  </if>
		 ORDER BY INTRST_AREA_NM, ANALS_AREA_ID
	</select>
	
	<!-- 저감장치가동현황 -->
	<select id="getReductionFacil" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT BPLC_ID,
		       MAX(BSML_TRGNPT_NM) AS BSML_TRGNPT_NM,
		       MAX(REDUC_EQP_NM) AS REDUC_EQP_NM,
		       MAX(B.CODE_NM) AS REDUC_EQP_TY_NM,
		       NVL(DATE_FORMAT(DATE_ADD(MAX(START_DT),INTERVAL SUM(TIMESTAMPDIFF(SECOND,ON_DT,OFF_DT)) SECOND),'%H시간 %i분'),'미가동') AS ON_TIME,
		       REDUC_EQP_NO,
		       DATE_FORMAT(MAX(START_DT),'%Y-%m-%d') AS PARAMETER_1,
		       COUNT(1)OVER() AS DTA_CO
		  FROM (
		        SELECT BPLC_ID, REDUC_EQP_NO,
		               CTRL_CN_CODE,
		               CASE WHEN NO_DTA_AT='Y' AND CTRL_CN_CODE='COM08001' THEN START_DT
		                    WHEN NO_DTA_AT IS NULL AND DTA_FIRST_RN=1 AND CTRL_CN_CODE='COM08002' THEN START_DT
		                    WHEN NO_DTA_AT IS NULL AND DTA_FIRST_RN &lt;&gt; 1 AND CTRL_CN_CODE='COM08002' THEN LAG(EQP_CTRL_DT)OVER(PARTITION BY BPLC_ID, REDUC_EQP_NO ORDER BY EQP_CTRL_DT)
		                    WHEN NO_DTA_AT IS NULL AND DTA_LAST_RN=1 AND CTRL_CN_CODE='COM08001' THEN EQP_CTRL_DT
		                END AS ON_DT,
		               CASE WHEN NO_DTA_AT='Y' AND CTRL_CN_CODE='COM08001' THEN END_DT
		                    WHEN NO_DTA_AT IS NULL AND CTRL_CN_CODE='COM08002' THEN EQP_CTRL_DT
		                    WHEN NO_DTA_AT IS NULL AND DTA_LAST_RN=1 AND CTRL_CN_CODE='COM08001' THEN END_DT
		                END AS OFF_DT,
		               BSML_TRGNPT_NM, REDUC_EQP_NM, REDUC_EQP_TY_CODE, DTA_DE,
		               START_DT
		          FROM (
		                SELECT BPLC_ID, REDUC_EQP_NO,
		                       NVL(CTRL_CN_CODE,(SELECT CTRL_CN_CODE
		                                           FROM BSML_REDUC_EQP_CTRL_HIST  B
		                                          WHERE B.BPLC_ID=A.BPLC_ID
		                                            AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
		                                            AND B.EQP_CTRL_DT=A.EQP_CTRL_DT
		                                        )
		                          ) AS CTRL_CN_CODE,
		                       IF(CTRL_CN_CODE IS NULL,'Y',NULL) AS NO_DTA_AT,
		                       EQP_CTRL_DT,
		                       ROW_NUMBER()OVER(PARTITION BY BPLC_ID, REDUC_EQP_NO ORDER BY EQP_CTRL_DT) AS DTA_FIRST_RN,
		                       ROW_NUMBER()OVER(PARTITION BY BPLC_ID, REDUC_EQP_NO ORDER BY EQP_CTRL_DT DESC) AS DTA_LAST_RN,
		                       BSML_TRGNPT_NM, REDUC_EQP_NM, REDUC_EQP_TY_CODE, DTA_DE,
		                       START_DT, END_DT, LAG_CODE
		                  FROM (
		                        SELECT A.*,
		                               B.CTRL_CN_CODE,
		                               NVL(B.EQP_CTRL_DT,(SELECT MAX(EQP_CTRL_DT)
		                                                    FROM BSML_REDUC_EQP_CTRL_HIST C
		                                                   WHERE C.BPLC_ID=A.BPLC_ID
		                                                     AND C.REDUC_EQP_NO=A.REDUC_EQP_NO
		                                                     AND C.EQP_CTRL_DT &lt;= A.START_DT
		                                                 )
		                                  ) AS EQP_CTRL_DT,               
		                               LAG(B.CTRL_CN_CODE)OVER(PARTITION BY B.BPLC_ID, B.REDUC_EQP_NO ORDER BY B.EQP_CTRL_DT) AS LAG_CODE
		                          FROM (
		                                SELECT B.BPLC_ID, B.BSML_TRGNPT_NM,
		                                       C.REDUC_EQP_NO, C.REDUC_EQP_NM, C.REDUC_EQP_TY_CODE,
		                                       PARAMETER_1 AS DTA_DE,
		                                       DATE_FORMAT(A.PARAMETER_1,'%Y-%m-%d %T') AS START_DT,
		                                       DATE_FORMAT(CONCAT(A.PARAMETER_1,'235959'),'%Y-%m-%d %T') AS END_DT
		                                  FROM (SELECT #{nDate} AS PARAMETER_1, -- 조회일
		                                               '' AS PARAMETER_2, -- 돈사ID
		                                               '' AS PARAMETER_3, -- 저감설비NO
		                                               '' AS PARAMETER_4  -- 설비유형
		                                       ) A,
		                                       BPLC_INFO B,
		                                       BSML_REDUC_EQP_INFO C
		                                 WHERE B.BSML_TRGNPT_SE_CODE='BSL01002'
		                                   AND B.BPLC_ID=IF(A.PARAMETER_2='',B.BPLC_ID,A.PARAMETER_2)
		                                   AND C.BPLC_ID=B.BPLC_ID
		                                   AND C.REDUC_EQP_NO=IF(A.PARAMETER_3='',C.REDUC_EQP_NO,A.PARAMETER_3)
		                                   AND C.REDUC_EQP_TY_CODE=IF(A.PARAMETER_4='',C.REDUC_EQP_TY_CODE,A.PARAMETER_4)
		                               ) A
		                               LEFT JOIN
		                               BSML_REDUC_EQP_CTRL_HIST B
		                               ON (B.BPLC_ID=A.BPLC_ID
		                               AND B.REDUC_EQP_NO=A.REDUC_EQP_NO
		                               AND B.EQP_CTRL_DT BETWEEN A.START_DT AND A.END_DT
		                               AND B.CTRL_RESULT_CODE='COM05000'
		                                  )
		                          ) A
		                 WHERE LAG_CODE IS NULL
		                    OR CTRL_CN_CODE &lt;&gt; LAG_CODE
		               ) A
		       ) A,
		       COM_CODE B
		 WHERE B.CODE=A.REDUC_EQP_TY_CODE
		 GROUP BY BPLC_ID, REDUC_EQP_NO
		 ORDER BY BPLC_ID, REDUC_EQP_NO
	</select>
	
	<!-- 관심 지역 목록 -->
	<select id="getAnalsAreaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	SELECT INTRST_AREA_NM, ANALS_AREA_ID
	  FROM ANALS_AREA_MANAGE
	 WHERE GRID_INTRST_SE_CODE = 'ANL01002'
	 ORDER BY INTRST_AREA_NM, ANALS_AREA_ID	
	</select>
	
	<!-- 악취 발생 예보 현황 목록 -->
    <select id="getOccurrenceForecastList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
     <![CDATA[
			 	SELECT ANALS_AREA_ID
				     , MAX(INTRST_AREA_NM) AS INTRST_AREA_NM
				     , MAX(PREDICT_AL) AS INTRST_AREA_AL
				     , MAX(IF(NO=1,EX_AT,NULL)) AS DTA_01
				     , MAX(IF(NO=2,EX_AT,NULL)) AS DTA_02
				     , MAX(IF(NO=3,EX_AT,NULL)) AS DTA_03
				     , MAX(IF(NO=4,EX_AT,NULL)) AS DTA_04
				     , GRID_AREA_ID
				     , COUNT(1)OVER() AS DTA_CO
				  FROM (SELECT A.ANALS_AREA_ID, A.INTRST_AREA_NM, A.NO, A.PREDICT_AL,
				               A.STDRVALUE, B.BSML_DNSTY, A.GRID_AREA_ID,
				               CASE WHEN B.BSML_DNSTY IS NULL THEN 'N/A'
				                    WHEN B.BSML_DNSTY IS NOT NULL AND B.BSML_DNSTY > A.STDRVALUE THEN CONCAT('O(',B.BSML_DNSTY,')')
				                    WHEN B.BSML_DNSTY IS NOT NULL AND B.BSML_DNSTY <= A.STDRVALUE THEN 'X'
				                END AS EX_AT
				          FROM (
				                SELECT ANALS_AREA_ID, INTRST_AREA_NM, PREDICT_AL
				                     , CASE WHEN C.NO=1 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'000000'),'%Y-%m-%d %T')
				                            WHEN C.NO=2 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'060000'),'%Y-%m-%d %T')
				                            WHEN C.NO=3 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'120000'),'%Y-%m-%d %T')
				                            WHEN C.NO=4 THEN DATE_FORMAT(CONCAT(PARAMETER_1,'180000'),'%Y-%m-%d %T')
				                        END AS DTA_DT
				                     , STDRVALUE, NO, B.GRID_AREA_ID
				                  FROM (
				                        SELECT IFNULL(REPLACE(#{nDate}, '-', ''), CURDATE()+0) AS PARAMETER_1, -- 예보일
					                              '' AS PARAMETER_2, -- 시
					                              #{area} AS PARAMETER_3  -- 관심지역코드
				                       ) A,
				                       ANALS_AREA_MANAGE B,
				                       ROW_CREAT C,
				                       SMS_STDRVALUE_MANAGE D
				                 WHERE B.GRID_INTRST_SE_CODE='ANL01002'
				                   AND B.ANALS_AREA_ID=IF(A.PARAMETER_3='',B.ANALS_AREA_ID,A.PARAMETER_3)
				                   AND C.NO <= 4
				                   AND D.SMS_SE_CODE='COM03002'
				                   AND D.IEM_CODE='S0001'
				               ) A
				               LEFT JOIN
				               LRN_FRCST_AI B
				               ON (B.ANALS_AREA_ID=A.ANALS_AREA_ID
				               AND B.DTA_DT=A.DTA_DT
				                  )
				       ) A
				 GROUP BY ANALS_AREA_ID
				 ORDER BY INTRST_AREA_NM, ANALS_AREA_ID
			 ]]>
    </select>
	
</mapper>